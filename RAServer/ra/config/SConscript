# -*- mode: python -*-

Import('env')
env = env.Clone()

libconfig_sources = [
    'PolicyConfig.cpp',
    'DeviationPolicyItem.cpp',
    'PolicyConfigItemBase.cpp',
    'ThresholdPolicyItem.cpp',
    'AvailabilityPolicyItem.cpp',
    'SingularityPolicyItem.cpp',
    'TrendPolicyItem.cpp',
    'CyclePolicyItem.cpp',
    'ConfigDownloader.cpp',
    'HostItem.cpp',
    'TimeRange.cpp',
    'BootstrapConfig.cpp',
    'ShieldConfig.cpp',
    'ConfigWrapper.cpp',
    'DataSourceConfig.cpp',
    'RedAlertConfig.cpp',
     ]

config_libs = [
    'ra_fetcher', 'ra_util','contrib_fetcher',
    'log4cplus', 'curl', 'sqlite3', 'cppunit', 'dl'
]

env.compileAndInstallLibrary(target = 'ra_config',
                            sources = libconfig_sources,
                            package = 'red_alert',
                            libs = config_libs)
env.SConscript(dirs='test', exports='env')
