# -*- mode: python -*-

import os

Import('env')
env = env.Clone()

pwd = Dir('.')
config_command = """
cd '%s' && autoreconf -fi && aclocal && ./configure --prefix='%s' CC='%s' CFLAGS='-g -fPIC'
""" % (pwd.abspath, env["install_path"], env["CC"])

build_command = "cd '%s' && touch * && make install" % (pwd.abspath,)

sources = [
    'doc/conf.py',
    'doc/github_commits.c',
    'doc/changes.rst',
    'doc/Makefile.am',
    'doc/index.rst',
    'doc/upgrading.rst',
    'doc/ext/refcounting.py',
    'doc/apiref.rst',
    'doc/README',
    'doc/portability.rst',
    'doc/gettingstarted.rst',
    'doc/tutorial.rst',
    'doc/conformance.rst',
    'Makefile.am',
    'CMakeLists.txt',
    'configure.ac',
    'LICENSE',
    'test/Makefile.am',
    'test/bin/json_process.c',
    'test/bin/Makefile.am',
    'test/scripts/valgrind.sh',
    'test/scripts/run-tests.sh',
    'test/suites/Makefile.am',
    'test/suites/encoding-flags/indent-array/input',
    'test/suites/encoding-flags/indent-array/output',
    'test/suites/encoding-flags/indent-array/env',
    'test/suites/encoding-flags/compact-object/input',
    'test/suites/encoding-flags/compact-object/output',
    'test/suites/encoding-flags/compact-object/env',
    'test/suites/encoding-flags/ensure-ascii/input',
    'test/suites/encoding-flags/ensure-ascii/output',
    'test/suites/encoding-flags/ensure-ascii/env',
    'test/suites/encoding-flags/run',
    'test/suites/encoding-flags/indent-object/input',
    'test/suites/encoding-flags/indent-object/output',
    'test/suites/encoding-flags/indent-object/env',
    'test/suites/encoding-flags/array/input',
    'test/suites/encoding-flags/array/output',
    'test/suites/encoding-flags/indent-compact-object/input',
    'test/suites/encoding-flags/indent-compact-object/output',
    'test/suites/encoding-flags/indent-compact-object/env',
    'test/suites/encoding-flags/indent-compact-array/input',
    'test/suites/encoding-flags/indent-compact-array/output',
    'test/suites/encoding-flags/indent-compact-array/env',
    'test/suites/encoding-flags/object/input',
    'test/suites/encoding-flags/object/output',
    'test/suites/encoding-flags/object/env',
    'test/suites/encoding-flags/preserve-order/input',
    'test/suites/encoding-flags/preserve-order/output',
    'test/suites/encoding-flags/preserve-order/env',
    'test/suites/encoding-flags/compact-array/input',
    'test/suites/encoding-flags/compact-array/output',
    'test/suites/encoding-flags/compact-array/env',
    'test/suites/encoding-flags/sort-keys/input',
    'test/suites/encoding-flags/sort-keys/output',
    'test/suites/encoding-flags/sort-keys/env',
    'test/suites/encoding-flags/real-precision/input',
    'test/suites/encoding-flags/real-precision/output',
    'test/suites/encoding-flags/real-precision/env',
    'test/suites/invalid-unicode/invalid-utf-8-in-string/input',
    'test/suites/invalid-unicode/invalid-utf-8-in-string/error',
    'test/suites/invalid-unicode/invalid-utf-8-in-real-after-e/input',
    'test/suites/invalid-unicode/invalid-utf-8-in-real-after-e/error',
    'test/suites/invalid-unicode/invalid-utf-8-in-array/input',
    'test/suites/invalid-unicode/invalid-utf-8-in-array/error',
    'test/suites/invalid-unicode/not-in-unicode-range/input',
    'test/suites/invalid-unicode/not-in-unicode-range/error',
    'test/suites/invalid-unicode/invalid-utf-8-in-escape/input',
    'test/suites/invalid-unicode/invalid-utf-8-in-escape/error',
    'test/suites/invalid-unicode/invalid-utf-8-in-int/input',
    'test/suites/invalid-unicode/invalid-utf-8-in-int/error',
    'test/suites/invalid-unicode/invalid-utf-8-in-exponent/input',
    'test/suites/invalid-unicode/invalid-utf-8-in-exponent/error',
    'test/suites/invalid-unicode/run',
    'test/suites/invalid-unicode/truncated-utf-8/input',
    'test/suites/invalid-unicode/truncated-utf-8/error',
    'test/suites/invalid-unicode/invalid-utf-8-in-identifier/input',
    'test/suites/invalid-unicode/invalid-utf-8-in-identifier/error',
    'test/suites/invalid-unicode/overlong-ascii-encoding/input',
    'test/suites/invalid-unicode/overlong-ascii-encoding/error',
    'test/suites/invalid-unicode/invalid-utf-8-in-bigger-int/input',
    'test/suites/invalid-unicode/invalid-utf-8-in-bigger-int/error',
    'test/suites/invalid-unicode/restricted-utf-8/input',
    'test/suites/invalid-unicode/restricted-utf-8/error',
    'test/suites/invalid-unicode/lone-utf-8-continuation-byte/input',
    'test/suites/invalid-unicode/lone-utf-8-continuation-byte/error',
    'test/suites/invalid-unicode/overlong-4-byte-encoding/input',
    'test/suites/invalid-unicode/overlong-4-byte-encoding/error',
    'test/suites/invalid-unicode/overlong-3-byte-encoding/input',
    'test/suites/invalid-unicode/overlong-3-byte-encoding/error',
    'test/suites/invalid-unicode/lone-invalid-utf-8/input',
    'test/suites/invalid-unicode/lone-invalid-utf-8/error',
    'test/suites/invalid-unicode/invalid-utf-8-after-backslash/input',
    'test/suites/invalid-unicode/invalid-utf-8-after-backslash/error',
    'test/suites/invalid-unicode/encoded-surrogate-half/input',
    'test/suites/invalid-unicode/encoded-surrogate-half/error',
    'test/suites/api/test_load.c',
    'test/suites/api/test_equal.c',
    'test/suites/api/check-exports',
    'test/suites/api/Makefile.am',
    'test/suites/api/test_object.c',
    'test/suites/api/test_memory_funcs.c',
    'test/suites/api/run',
    'test/suites/api/test_number.c',
    'test/suites/api/test_simple.c',
    'test/suites/api/test_unpack.c',
    'test/suites/api/test_array.c',
    'test/suites/api/test_load_callback.c',
    'test/suites/api/test_pack.c',
    'test/suites/api/test_copy.c',
    'test/suites/api/test_dump.c',
    'test/suites/api/test_loadb.c',
    'test/suites/api/test_dump_callback.c',
    'test/suites/api/util.h',
    'test/suites/valid/real-positive-exponent/input',
    'test/suites/valid/real-positive-exponent/output',
    'test/suites/valid/empty-array/input',
    'test/suites/valid/empty-array/output',
    'test/suites/valid/true/input',
    'test/suites/valid/true/output',
    'test/suites/valid/three-byte-utf-8/input',
    'test/suites/valid/three-byte-utf-8/output',
    'test/suites/valid/real-subnormal-number/input',
    'test/suites/valid/real-subnormal-number/output',
    'test/suites/valid/real-fraction-exponent/input',
    'test/suites/valid/real-fraction-exponent/output',
    'test/suites/valid/simple-int-0/input',
    'test/suites/valid/simple-int-0/output',
    'test/suites/valid/real-capital-e-positive-exponent/input',
    'test/suites/valid/real-capital-e-positive-exponent/output',
    'test/suites/valid/one-byte-utf-8/input',
    'test/suites/valid/one-byte-utf-8/output',
    'test/suites/valid/real-negative-exponent/input',
    'test/suites/valid/real-negative-exponent/output',
    'test/suites/valid/two-byte-utf-8/input',
    'test/suites/valid/two-byte-utf-8/output',
    'test/suites/valid/null/input',
    'test/suites/valid/null/output',
    'test/suites/valid/run',
    'test/suites/valid/complex-array/input',
    'test/suites/valid/complex-array/output',
    'test/suites/valid/complex-array/env',
    'test/suites/valid/false/input',
    'test/suites/valid/false/output',
    'test/suites/valid/string-escapes/input',
    'test/suites/valid/string-escapes/output',
    'test/suites/valid/real-underflow/input',
    'test/suites/valid/real-underflow/output',
    'test/suites/valid/utf-surrogate-four-byte-encoding/input',
    'test/suites/valid/utf-surrogate-four-byte-encoding/output',
    'test/suites/valid/simple-int-123/input',
    'test/suites/valid/simple-int-123/output',
    'test/suites/valid/escaped-utf-control-char/input',
    'test/suites/valid/escaped-utf-control-char/output',
    'test/suites/valid/negative-zero/input',
    'test/suites/valid/negative-zero/output',
    'test/suites/valid/simple-ascii-string/input',
    'test/suites/valid/simple-ascii-string/output',
    'test/suites/valid/utf-8-string/input',
    'test/suites/valid/utf-8-string/output',
    'test/suites/valid/real-exponent/input',
    'test/suites/valid/real-exponent/output',
    'test/suites/valid/simple-real/input',
    'test/suites/valid/simple-real/output',
    'test/suites/valid/short-string/input',
    'test/suites/valid/short-string/output',
    'test/suites/valid/negative-one/input',
    'test/suites/valid/negative-one/output',
    'test/suites/valid/real-capital-e/input',
    'test/suites/valid/real-capital-e/output',
    'test/suites/valid/empty-object-in-array/input',
    'test/suites/valid/empty-object-in-array/output',
    'test/suites/valid/negative-int/input',
    'test/suites/valid/negative-int/output',
    'test/suites/valid/simple-int-1/input',
    'test/suites/valid/simple-int-1/output',
    'test/suites/valid/empty-object/input',
    'test/suites/valid/empty-object/output',
    'test/suites/valid/empty-string/input',
    'test/suites/valid/empty-string/output',
    'test/suites/valid/real-capital-e-negative-exponent/input',
    'test/suites/valid/real-capital-e-negative-exponent/output',
    'test/suites/valid/simple-object/input',
    'test/suites/valid/simple-object/output',
    'test/suites/invalid/invalid-second-surrogate/input',
    'test/suites/invalid/invalid-second-surrogate/error',
    'test/suites/invalid/too-big-negative-integer/input',
    'test/suites/invalid/too-big-negative-integer/error',
    'test/suites/invalid/null-byte-in-object-key/input',
    'test/suites/invalid/null-byte-in-object-key/error',
    'test/suites/invalid/unterminated-string/input',
    'test/suites/invalid/unterminated-string/error.strip',
    'test/suites/invalid/unterminated-string/error.normal',
    'test/suites/invalid/object-in-unterminated-array/input',
    'test/suites/invalid/object-in-unterminated-array/error.strip',
    'test/suites/invalid/object-in-unterminated-array/error.normal',
    'test/suites/invalid/extra-comma-in-array/input',
    'test/suites/invalid/extra-comma-in-array/error',
    'test/suites/invalid/null-byte-outside-string/input',
    'test/suites/invalid/null-byte-outside-string/nostrip',
    'test/suites/invalid/null-byte-outside-string/error',
    'test/suites/invalid/ascii-unicode-identifier/input',
    'test/suites/invalid/ascii-unicode-identifier/error',
    'test/suites/invalid/too-big-positive-integer/input',
    'test/suites/invalid/too-big-positive-integer/error',
    'test/suites/invalid/invalid-identifier/input',
    'test/suites/invalid/invalid-identifier/error',
    'test/suites/invalid/unterminated-key/input',
    'test/suites/invalid/unterminated-key/error.strip',
    'test/suites/invalid/unterminated-key/error.normal',
    'test/suites/invalid/garbage-at-the-end/input',
    'test/suites/invalid/garbage-at-the-end/error',
    'test/suites/invalid/unterminated-empty-key/input',
    'test/suites/invalid/unterminated-empty-key/error.strip',
    'test/suites/invalid/unterminated-empty-key/error.normal',
    'test/suites/invalid/unterminated-object-and-array/input',
    'test/suites/invalid/unterminated-object-and-array/error',
    'test/suites/invalid/lone-second-surrogate/input',
    'test/suites/invalid/lone-second-surrogate/error',
    'test/suites/invalid/invalid-negative-real/input',
    'test/suites/invalid/invalid-negative-real/error',
    'test/suites/invalid/unterminated-array-and-object/input',
    'test/suites/invalid/unterminated-array-and-object/error.strip',
    'test/suites/invalid/unterminated-array-and-object/error.normal',
    'test/suites/invalid/real-garbage-after-e/input',
    'test/suites/invalid/real-garbage-after-e/error',
    'test/suites/invalid/brace-comma/input',
    'test/suites/invalid/brace-comma/error',
    'test/suites/invalid/object-garbage-at-end/input',
    'test/suites/invalid/object-garbage-at-end/error',
    'test/suites/invalid/null/input',
    'test/suites/invalid/null/error',
    'test/suites/invalid/empty/input',
    'test/suites/invalid/empty/error',
    'test/suites/invalid/object-apostrophes/input',
    'test/suites/invalid/object-apostrophes/error',
    'test/suites/invalid/lone-open-brace/input',
    'test/suites/invalid/lone-open-brace/error.strip',
    'test/suites/invalid/lone-open-brace/error.normal',
    'test/suites/invalid/run',
    'test/suites/invalid/apostrophe/input',
    'test/suites/invalid/apostrophe/error',
    'test/suites/invalid/minus-sign-without-number/input',
    'test/suites/invalid/minus-sign-without-number/error',
    'test/suites/invalid/real-positive-overflow/input',
    'test/suites/invalid/real-positive-overflow/error',
    'test/suites/invalid/unterminated-array/input',
    'test/suites/invalid/unterminated-array/error.strip',
    'test/suites/invalid/unterminated-array/error.normal',
    'test/suites/invalid/negative-integer-starting-with-zero/input',
    'test/suites/invalid/negative-integer-starting-with-zero/error',
    'test/suites/invalid/bracket-one-comma/input',
    'test/suites/invalid/bracket-one-comma/error.strip',
    'test/suites/invalid/bracket-one-comma/error.normal',
    'test/suites/invalid/invalid-negative-integer/input',
    'test/suites/invalid/invalid-negative-integer/error',
    'test/suites/invalid/lone-open-bracket/input',
    'test/suites/invalid/lone-open-bracket/error.strip',
    'test/suites/invalid/lone-open-bracket/error.normal',
    'test/suites/invalid/garbage-after-newline/input',
    'test/suites/invalid/garbage-after-newline/error',
    'test/suites/invalid/object-no-value/input',
    'test/suites/invalid/object-no-value/error.strip',
    'test/suites/invalid/object-no-value/error.normal',
    'test/suites/invalid/unicode-identifier/input',
    'test/suites/invalid/unicode-identifier/error',
    'test/suites/invalid/real-truncated-at-point/input',
    'test/suites/invalid/real-truncated-at-point/error',
    'test/suites/invalid/truncated-unicode-surrogate/input',
    'test/suites/invalid/truncated-unicode-surrogate/error',
    'test/suites/invalid/extra-comma-in-multiline-array/input',
    'test/suites/invalid/extra-comma-in-multiline-array/error',
    'test/suites/invalid/null-byte-in-string/input',
    'test/suites/invalid/null-byte-in-string/nostrip',
    'test/suites/invalid/null-byte-in-string/error',
    'test/suites/invalid/tab-character-in-string/input',
    'test/suites/invalid/tab-character-in-string/error',
    'test/suites/invalid/bracket-comma/input',
    'test/suites/invalid/bracket-comma/error',
    'test/suites/invalid/real-truncated-at-e/input',
    'test/suites/invalid/real-truncated-at-e/error',
    'test/suites/invalid/integer-starting-with-zero/input',
    'test/suites/invalid/integer-starting-with-zero/error',
    'test/suites/invalid/object-unterminated-value/input',
    'test/suites/invalid/object-unterminated-value/error.strip',
    'test/suites/invalid/object-unterminated-value/error.normal',
    'test/suites/invalid/real-negative-overflow/input',
    'test/suites/invalid/real-negative-overflow/error',
    'test/suites/invalid/object-no-colon/input',
    'test/suites/invalid/object-no-colon/error.strip',
    'test/suites/invalid/object-no-colon/error.normal',
    'test/suites/invalid/invalid-escape/input',
    'test/suites/invalid/invalid-escape/error',
    'test/run-suites',
    '.travis.yml',
    'src/jansson.h',
    'src/hashtable_seed.c',
    'src/load.c',
    'src/strbuffer.c',
    'src/hashtable.h',
    'src/utf.c',
    'src/memory.c',
    'src/Makefile.am',
    'src/error.c',
    'src/pack_unpack.c',
    'src/jansson.def',
    'src/value.c',
    'src/strbuffer.h',
    'src/utf.h',
    'src/strconv.c',
    'src/hashtable.c',
    'src/jansson_config.h.in',
    'src/jansson_private.h',
    'src/lookup3.h',
    'src/dump.c',
    'appveyor.yml',
    'release.sh',
    'Android.mk',
    'jansson.pc.in',
    'cmake/FindSphinx.cmake',
    'cmake/CheckFunctionKeywords.cmake',
    'cmake/jansson_private_config.h.cmake',
    'cmake/JanssonConfigVersion.cmake.in',
    'cmake/jansson_config.h.cmake',
    'cmake/JanssonConfig.cmake.in',
    'CHANGES',
    'CleanSpec.mk',
    'README.rst',
    'android/jansson_config.h',
]

config = env.Command(target = ['Makefile', 'jansson_private_config.h'], source = sources, action = config_command)
libjansson = env.Command(target = [os.path.join(env["install_path"], 'include/jansson.h'),
                                   os.path.join(env["install_path"], 'include/jansson_config.h'),
                                   os.path.join(env["install_path"], 'lib/libjansson.a'),
                                   os.path.join(env["install_path"], 'lib/libjansson.so')],
                         source = sources + [config], action = build_command)
Return('libjansson')
